1 LDR, 3 LEDs: Intensity of LEDs depends on intensity of external light
1 POT, 1 RGB LED: POT controls the color
1 Ultrasonic, 1 4-digit 7-segment display: display shows the distance measured by ultrasonic sensor
1 button, 1 LED matrix: button switches the letters to show on the display (your name)


#1
int leds[] = {2,3,4};
int ldr = A0;

void setup() {
  Serial.begin (9600);
  for(int i = 0; i<3; i++) pinMode(leds[i], OUTPUT);
  
}

void loop() {
  Serial.println(analogRead(ldr));
  analogWrite(leds[1], 255-analogRead(ldr)/4);
  delay(10);
}

#2
int leds[] = {3,5,6};
#define pot A0
int red=11;
int blue = 10;
int green = 9;

int val = 0;

void setup() {
  Serial.begin (9600);
  for(int i = 0; i<3; i++) pinMode(leds[i], OUTPUT);
  pinMode(red, OUTPUT);
  pinMode(blue, OUTPUT);
  pinMode(green, OUTPUT);
}

void loop() {
  Serial.println(analogRead(pot));
  if(analogRead(pot) < 300) change(255,0,0);
  if(analogRead(pot)>300 && analogRead(pot) < 700)change(0,255,0);
  if(analogRead(pot)>700)change(0,0,255);
  
}

void change(int red1, int blue1, int green1){
  analogWrite(red, 255-red1);
  analogWrite(blue, 255-blue1);
  analogWrite(green, 255-green1);
}

#3
int button1 = 11;
int button2 = 12;

const byte numeral[10][8] = {
    {1,1,1,1,1,1,0,0}, // 0
    {0,1,1,0,0,0,0,0}, // 1
    {1,1,0,1,1,0,1,0}, // 2
    {1,1,1,1,0,0,1,0}, // 3
    {0,1,1,0,0,1,1,0}, // 4
    {1,0,1,1,0,1,1,0}, // 5
    {0,0,1,1,1,1,1,0}, // 6
    {1,1,1,0,0,0,0,0}, // 7
    {1,1,1,1,1,1,1,0}, // 8
    {1,1,1,0,0,1,1,0}  // 9
}; 
const int segmentPins[8] = {2,3,4,6,7,9,8,5}; 

void setup() {
  Serial.begin (9600);
  pinMode(button1, INPUT);
  pinMode(button2, INPUT);
  for(int i=0; i < 8; i++)
    pinMode(segmentPins[i], OUTPUT);
}

int count = 0;
void loop() {
  if(digitalRead(button1) == HIGH){
    count++;
    while(digitalRead(button1) == HIGH){
    }
  }
  if(digitalRead(button2) == HIGH){
    count--;
    while(digitalRead(button2) == HIGH){
    }
  }
  if(count<0) count = 0;
  if(count>9) count = 9;

  showDigit(count);
}

void showDigit(int number){
  if( number >= 0 && number <= 9){
    for(int segment = 0; segment < 8; segment++){
      int isBitSet = ! numeral[number][segment];; // remove ! sign if common cathode display
      digitalWrite(segmentPins[segment], isBitSet);
    }
  }
}

#4

